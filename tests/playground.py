import sys
import signal
from smolcalc.calculator import evaluate as calculator ,evaluate_all
sys.setrecursionlimit(5000)

def cleanup(*args):
    print("The program is stopping")
    sys.exit(0)


def main():
    print(calculator([0,0]))
    print(calculator(None))
    print(calculator("(((2+3)*(6-5))^((-pi)*23-(43*0.5)+6)*7)"))
    print(calculator("ln(-12)"))
    print(calculator(" 10^(50)"))
    print(calculator("10+5.1"))
    print(calculator("0^0"))
    print(calculator("1234"))
    print(calculator
    print(evaluate_all(["344345*3454/243","123547676555555555867777777777677777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777776755555555555555555555555555555555555555577777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777/32222222222222222222245","(((2+3)*(6-5))^((-pi)*23-(43*0.5)+6)*7)","(((2+3)*(6-5))^((-pi)*23-(43*0.5)+6)*7)", "",7689,[]]))


if __name__ == '__main__':
    signal.signal(signal.SIGINT, cleanup)
    try:
        main()
    except KeyboardInterrupt:
        cleanup()
